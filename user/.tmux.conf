set-option -g history-limit 100000

# Modern colors and terminal features
if-shell 'uname | grep -q Darwin' 'set -g default-terminal "xterm-256color"'
if-shell 'uname | grep -q Linux' 'set -g default-terminal "tmux-256color"'
set-option -sa terminal-overrides ",*256col*:Tc"
set-option -sa terminal-overrides ",*:RGB"
set-option -sa terminal-overrides ",*:Smulx=\E[4::%p1%dm"
set-option -sa terminal-overrides ",*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m"

# Performance optimizations
set -g display-panes-time 800
set -g display-time 1000
set -g repeat-time 1000
set -g status-interval 5

# Buffer settings for better performance
set -g buffer-limit 50
set -g history-file ~/.tmux_history

# Better scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Word separators for better text selection
set -g word-separators ' @"=()[]{}:,.'

# Clipboard integration improvements
set -g set-clipboard external
if-shell 'command -v wl-copy' 'set -s copy-command "wl-copy"'
if-shell 'command -v xclip' 'set -s copy-command "xclip -selection clipboard"'

# Unbind the prefix and bind it to Ctrl-a like screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Use screen shortcut (prefix a) for toggling windows
bind-key -T prefix          a           last-window

# VIM mode
set -g mode-keys vi

# Copy on selection automatically
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xsel -ib'

# Remove tmux copy/paste bindings to use Kitty's Ctrl+C/V
unbind-key -T copy-mode-vi C-c
unbind-key -T prefix C-v

# Vim-like pane navigation
bind-key -T prefix          h           select-pane -L
bind-key -T prefix          j           select-pane -D
bind-key -T prefix          k           select-pane -U
bind-key -T prefix          l           select-pane -R

# Alt+vim keys for pane navigation (no prefix needed)
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Super fast pane operations (no prefix needed)
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-x kill-pane
bind-key -n M-z resize-pane -Z

# Fine resizing with vim keys
bind-key -T prefix          H           resize-pane -L 1
bind-key -T prefix          J           resize-pane -D 1
bind-key -T prefix          K           resize-pane -U 1
bind-key -T prefix          L           resize-pane -R 1

# Larger resizing with arrows
bind-key -r -T prefix       Left        resize-pane -L 5
bind-key -r -T prefix       Down        resize-pane -D 5
bind-key -r -T prefix       Up          resize-pane -U 5
bind-key -r -T prefix       Right       resize-pane -R 5


# Quick switch between windows
bind-key -T root            C-PageDown  next-window
bind-key -T root            C-PageUp    previous-window

# Quick window creation and navigation
bind-key -T prefix          c           new-window -c "#{pane_current_path}"
bind-key -T prefix          n           next-window
bind-key -T prefix          p           previous-window
bind-key -T prefix          w           choose-window
bind-key -T prefix          ,           command-prompt -I "#W" "rename-window '%%'"

# Window swapping controls using Ctrl+n and Ctrl+p 
bind-key -T prefix          C-p         swap-window -d -t -1
bind-key -T prefix          C-n         swap-window -d -t +1

# Fast window switching with Alt+numbers (no prefix needed)
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

# Super fast window operations
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-q kill-window
bind-key -n M-r command-prompt -I "#W" "rename-window '%%'"

# Window switching with numbers
bind-key -T prefix          1           select-window -t 1
bind-key -T prefix          2           select-window -t 2
bind-key -T prefix          3           select-window -t 3
bind-key -T prefix          4           select-window -t 4
bind-key -T prefix          5           select-window -t 5
bind-key -T prefix          6           select-window -t 6
bind-key -T prefix          7           select-window -t 7
bind-key -T prefix          8           select-window -t 8
bind-key -T prefix          9           select-window -t 9
bind-key -T prefix          0           select-window -t 10

# Splitting panes
unbind -T prefix '"'
bind-key -T prefix          |           split-window -h -c "#{pane_current_path}"
bind-key -T prefix          '\'         split-window -h -c "#{pane_current_path}"
unbind -T prefix &
bind-key -T prefix          -           split-window -v -c "#{pane_current_path}"
bind-key -T prefix          _           split-window -v -c "#{pane_current_path}"

# Additional split shortcuts
bind-key -T prefix          v           split-window -h -c "#{pane_current_path}"
bind-key -T prefix          s           split-window -v -c "#{pane_current_path}"

# Pane management
bind-key -T prefix          x           kill-pane
bind-key -T prefix          X           kill-window
bind-key -T prefix          q           display-panes
bind-key -T prefix          z           resize-pane -Z
bind-key -T prefix          !           break-pane
bind-key -T prefix          @           join-pane -h -s !


# Pane zoom toggle with double-tap
bind-key -T prefix          z           resize-pane -Z
bind-key -T prefix          Z           resize-pane -Z

# Session management (moved to avoid conflict with split)
bind-key -T prefix          S           choose-session
bind-key -T prefix          $           command-prompt -I "#S" "rename-session '%%'"
bind-key -T prefix          d           detach-client
bind-key -T prefix          D           choose-client

# Quick session switching
bind-key -T prefix          (           switch-client -p
bind-key -T prefix          )           switch-client -n

# Reload config file
bind -T prefix              r           source-file ~/.tmux.conf \; display "Config reloaded!"

# Toggle synchronize panes (moved to avoid conflict)
bind-key -T prefix          y           set-window-option synchronize-panes

# Mouse friendly
set -g mouse on

# System clipboard - enable automatic copying
set -g set-clipboard on

# Use current directory as window title but allow manual renaming
set-option -g allow-rename off
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Monitoring
setw -g monitor-activity on
set -g visual-activity off
setw -g monitor-silence 0

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows when one is deleted
set-option -g renumber-windows on

# Default shell
if-shell 'uname | grep -q Darwin' 'set-option -g default-shell /bin/zsh'
if-shell 'uname | grep -q Linux' 'set-option -g default-shell /bin/zsh'

# Disable right-click menu in tmux 3.0
unbind-key -T root MouseDown3Pane

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Emacs key bindings in tmux command prompt (prefix + :) are better than vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Aggressive resize for multi-client scenarios
setw -g aggressive-resize on

# Enable xterm keys for better terminal integration
set -g xterm-keys on

# Bell settings
set -g bell-action none
set -g visual-bell off

# Pane border colors
set -g pane-border-status off
set -g pane-border-lines simple

# Move statusbar to the top
set-option -g status "on"
set-option -g status-position top

######################
### Color scheme
######################

# iceberg colors
COL_FG="#c6c8d1"
COL_BG_MEDIUM="#4c566a"
COL_BG_DARK="#3b4252"
COL_BG_VERY_DARK="#2e3440"

set -g status-left-style "none"
set -g message-command-style "fg=$COL_FG,bg=$COL_BG_DARK"
set -g status-right-style "none"
set -g status-style "none,bg=$COL_BG_VERY_DARK"
set -g message-style "fg=$COL_FG,bg=$COL_BG_DARK"

set -g pane-active-border-style "fg=$COL_BG_DARK bg=$COL_BG_DARK"
set -g pane-border-style "fg=$COL_BG_DARK bg=$COL_BG_DARK"

set-option -g status-style "none,fg=$COL_FG,bg=$COL_BG_VERY_DARK"
set-option -g status-justify "centre"

# window-status-activity-attr is reverse by default, which means bg and fg are switched
set-window-option -g window-status-activity-style none
set-window-option -g window-status-separator ''

set -g status-left "#[fg=$COL_FG,bg=$COL_BG_DARK] #S #[fg=$COL_BG_DARK,bg=$COL_BG_VERY_DARK] "
set -g status-right "#[fg=$COL_FG,bg=$COL_BG_VERY_DARK] #{cpu_bg_color}#{cpu_icon}#{cpu_percentage} #{battery_icon}#{battery_percentage} #[fg=$COL_BG_DARK,bg=$COL_BG_VERY_DARK]#[fg=$COL_FG,bg=$COL_BG_DARK] %H:%M %d.%m.%Y "

activity_color="#{?window_activity_flag,colour1,$COL_FG}"
status_color="#{?window_silence_flag,colour3,${activity_color}}"

set-window-option -g window-status-current-format "#[fg=$COL_BG_MEDIUM,bg=$COL_BG_VERY_DARK]#[fg=$COL_FG,bg=$COL_BG_MEDIUM]  #{window_index} #{window_name}  #[fg=$COL_BG_MEDIUM,bg=$COL_BG_VERY_DARK]"
set-window-option -g window-status-format "#[fg=$COL_BG_DARK,bg=$COL_BG_VERY_DARK]#[fg=${status_color},bg=$COL_BG_DARK]  #{window_index} #{window_name}  #[fg=$COL_BG_DARK,bg=$COL_BG_VERY_DARK]"

# Quick layout switching
bind-key -T prefix          Space       next-layout
bind-key -T prefix          M-1         select-layout even-horizontal
bind-key -T prefix          M-2         select-layout even-vertical
bind-key -T prefix          M-3         select-layout main-horizontal
bind-key -T prefix          M-4         select-layout main-vertical
bind-key -T prefix          M-5         select-layout tiled

# Clear screen and history
bind-key -T prefix          C-l         send-keys 'C-l' \; clear-history

# Quick command execution
bind-key -T prefix          :           command-prompt
bind-key -T prefix          "'"         command-prompt -p index "select-window -t ':%%'"

# Quick shortcuts for common commands
bind-key -T prefix          R           respawn-pane -k
bind-key -T prefix          C-r         respawn-window -k
bind-key -T prefix          e           setw synchronize-panes
bind-key -T prefix          E           set-window-option synchronize-panes off

# Alternative clear screen and history commands
bind-key -T prefix          C-k         send-keys 'clear' C-m
bind-key -T prefix          C-y         clear-history

# Search and replace in copy mode
bind-key -T prefix          f           copy-mode \; send-keys /
bind-key -T prefix          F           copy-mode \; send-keys ?

# Quick new session (moved to avoid conflict)
bind-key -T prefix          S-n         command-prompt -p "New session name:" "new-session -d -s '%%'"

# Monitor activity/silence (avoiding conflicts)
bind-key -T prefix          A           set-window-option monitor-activity
bind-key -T prefix          M           set-window-option monitor-silence 30

# Mark and swap panes
bind-key -T prefix          t           select-pane -m
bind-key -T prefix          T           swap-pane

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

# Plugin settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh mysql psql'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @continuum-boot 'on'

# Additional productivity plugins
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'laktak/extrakto'

# Plugin-specific settings
set -g @logging-path "$HOME/.tmux/logs"
set -g @copycat_next 'N'
set -g @copycat_prev 'n'
set -g @fpp-key 'o'
set -g @urlview-key 'u'
set -g @extrakto_key 'tab'
set -g @extrakto_copy_key 'enter'
set -g @extrakto_insert_key 'ctrl-i'

# CPU and battery display settings
set -g @cpu_low_icon "="
set -g @cpu_medium_icon "≡"
set -g @cpu_high_icon "≣"
set -g @battery_symbol_heart_full "♥"
set -g @battery_symbol_heart_empty "♡"

run '~/.tmux/plugins/tpm/tpm'